-- 회원, 상품, 구매이력

CREATE TABLE TBL_COMPANY202 (
    COMPANY_CODE NUMBER PRIMARY KEY,
    NAME NVARCHAR2(10) NOT NULL,
    SALARY NUMBER DEFAULT 0, -- INT (소숫점 안되고 크기가 38로 고정이어서 쓸모없는 메모리 소모있음)
    ADDRESS NVARCHAR2(200)
);
DROP TABLE TBL_COMPANY202;
SELECT * FROM TBL_COMPANY202;
INSERT INTO TBL_COMPANY202 VALUES (1, '김개발자', 200, '광주1');
INSERT INTO TBL_COMPANY202 (COMPANY_CODE, NAME) VALUES (2, '김개발자');
INSERT INTO TBL_COMPANY202 VALUES (3, '박개발자', 300, '광주1');
INSERT INTO TBL_COMPANY202 VALUES (4, '이개발자', 400, '광주1');

-- 내가 저장해야할 데이터를 모두 담을 수 있는 구조를 가진 테이블을 만든다.
-- 의미없는 데이터를 몇건 넣어봄 (Dummy Data) 현재 3건

COMMIT;
ROLLBACK;
SELECT A.*, B.* FROM TBL_COMPANY202 A LEFT OUTER JOIN TBL_JOB202 B ON A.JOB = B.JOB_NUM;
UPDATE TBL_JOB202 SET JOB_NAME = '자바 개발1' WHERE JOB_NUM =1;

DROP TABLE TBL_JOB202;
CREATE TABLE TBL_JOB202 (
    JOB_NUM NUMBER PRIMARY KEY,
    JOB_NAME NVARCHAR2(200) NOT NULL
);

INSERT INTO TBL_JOB202 VALUES (1, '자바 개발');
INSERT INTO TBL_JOB202 VALUES (2, '웹 개발');
INSERT INTO TBL_JOB202 VALUES (3, '앱 개발');
SELECT * FROM TBL_JOB202;
COMMIT;

INSERT INTO JOB_STATE VALUES (1, 1);
INSERT INTO JOB_STATE VALUES (1, 2);
INSERT INTO JOB_STATE VALUES (2, 3);
INSERT INTO JOB_STATE VALUES (1, 30);

ROLLBACK;

COMMIT; -- JOB STATE에 COMPANY_CODE와 JOB_NUM을 이용하여 JOB의 명칭, 개발자의 이름을 출력해보기
SELECT * FROM JOB_STATE A LEFT OUTER JOIN TBL_JOB202 B ON A.JOB_NUM = B.JOB_NUM
                          LEFT OUTER JOIN TBL_COMPANY202 C ON A.COMPANY_CODE = C.COMPANY_CODE;

DELETE FROM JOB_STATE;
COMMIT;

CREATE TABLE JOB_STATE(
    COMPANY_CODE NUMBER ,
    JOB_NUM NUMBER,
    CONSTRAINT COMPANY_JOB_PK PRIMARY KEY (
    COMPANY_CODE,
    JOB_NUM
    ) ENABLE
);
-- 테이블을 만들어놨는데 문제가 있음. 문제가 뭘까?
-- 
-- 정규화: 데이터베이스를 설계적으로 잘 만들게 하는 규칙(과정)
